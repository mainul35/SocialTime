package com.socialtime.model;
// Generated Mar 16, 2017 11:49:00 AM by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Hours generated by hbm2java
 */
@Entity
@Table(name = "hours", catalog = "socialtime"
)
public class Hours implements java.io.Serializable {

    private int hourId;
    private String hour;
    private Set<Userunavailability> userunavailabilitiesForEndTimeId = new HashSet<Userunavailability>(0);
    private Set<Eventvotes> eventvotesesForStartTimeId = new HashSet<Eventvotes>(0);
    private Set<Eventvotes> eventvotesesForEndTimeId = new HashSet<Eventvotes>(0);
    private Set<Userunavailability> userunavailabilitiesForStartTimeId = new HashSet<Userunavailability>(0);
    private Set<Useravailability> useravailabilitiesForEndTimeId = new HashSet<Useravailability>(0);
    private Set<Useravailability> useravailabilitiesForStartTimeId = new HashSet<Useravailability>(0);
    private Set<Event> eventsForStartTime = new HashSet<Event>(0);
    private Set<Event> eventsForEndTime = new HashSet<Event>(0);

    public Hours() {
    }

    public Hours(int hourId, String hour) {
        this.hourId = hourId;
        this.hour = hour;
    }

    public Hours(int hourId, String hour, Set<Userunavailability> userunavailabilitiesForEndTimeId, Set<Eventvotes> eventvotesesForStartTimeId, Set<Eventvotes> eventvotesesForEndTimeId, Set<Userunavailability> userunavailabilitiesForStartTimeId, Set<Useravailability> useravailabilitiesForEndTimeId, Set<Useravailability> useravailabilitiesForStartTimeId, Set<Event> eventsForStartTime, Set<Event> eventsForEndTime) {
        this.hourId = hourId;
        this.hour = hour;
        this.userunavailabilitiesForEndTimeId = userunavailabilitiesForEndTimeId;
        this.eventvotesesForStartTimeId = eventvotesesForStartTimeId;
        this.eventvotesesForEndTimeId = eventvotesesForEndTimeId;
        this.userunavailabilitiesForStartTimeId = userunavailabilitiesForStartTimeId;
        this.useravailabilitiesForEndTimeId = useravailabilitiesForEndTimeId;
        this.useravailabilitiesForStartTimeId = useravailabilitiesForStartTimeId;
        this.eventsForStartTime = eventsForStartTime;
        this.eventsForEndTime = eventsForEndTime;
    }

    @Id

    @Column(name = "hourId", unique = true, nullable = false)
    public int getHourId() {
        return this.hourId;
    }

    public void setHourId(int hourId) {
        this.hourId = hourId;
    }

    @Column(name = "hour", nullable = false, length = 20)
    public String getHour() {
        return this.hour;
    }

    public void setHour(String hour) {
        this.hour = hour;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "hoursByEndTimeId")
    public Set<Userunavailability> getUserunavailabilitiesForEndTimeId() {
        return this.userunavailabilitiesForEndTimeId;
    }

    public void setUserunavailabilitiesForEndTimeId(Set<Userunavailability> userunavailabilitiesForEndTimeId) {
        this.userunavailabilitiesForEndTimeId = userunavailabilitiesForEndTimeId;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "hoursByStartTimeId")
    public Set<Eventvotes> getEventvotesesForStartTimeId() {
        return this.eventvotesesForStartTimeId;
    }

    public void setEventvotesesForStartTimeId(Set<Eventvotes> eventvotesesForStartTimeId) {
        this.eventvotesesForStartTimeId = eventvotesesForStartTimeId;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "hoursByEndTimeId")
    public Set<Eventvotes> getEventvotesesForEndTimeId() {
        return this.eventvotesesForEndTimeId;
    }

    public void setEventvotesesForEndTimeId(Set<Eventvotes> eventvotesesForEndTimeId) {
        this.eventvotesesForEndTimeId = eventvotesesForEndTimeId;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "hoursByStartTimeId")
    public Set<Userunavailability> getUserunavailabilitiesForStartTimeId() {
        return this.userunavailabilitiesForStartTimeId;
    }

    public void setUserunavailabilitiesForStartTimeId(Set<Userunavailability> userunavailabilitiesForStartTimeId) {
        this.userunavailabilitiesForStartTimeId = userunavailabilitiesForStartTimeId;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "hoursByEndTimeId")
    public Set<Useravailability> getUseravailabilitiesForEndTimeId() {
        return this.useravailabilitiesForEndTimeId;
    }

    public void setUseravailabilitiesForEndTimeId(Set<Useravailability> useravailabilitiesForEndTimeId) {
        this.useravailabilitiesForEndTimeId = useravailabilitiesForEndTimeId;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "hoursByStartTimeId")
    public Set<Useravailability> getUseravailabilitiesForStartTimeId() {
        return this.useravailabilitiesForStartTimeId;
    }

    public void setUseravailabilitiesForStartTimeId(Set<Useravailability> useravailabilitiesForStartTimeId) {
        this.useravailabilitiesForStartTimeId = useravailabilitiesForStartTimeId;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "hoursByStartTime")
    public Set<Event> getEventsForStartTime() {
        return this.eventsForStartTime;
    }

    public void setEventsForStartTime(Set<Event> eventsForStartTime) {
        this.eventsForStartTime = eventsForStartTime;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "hoursByEndTime")
    public Set<Event> getEventsForEndTime() {
        return this.eventsForEndTime;
    }

    public void setEventsForEndTime(Set<Event> eventsForEndTime) {
        this.eventsForEndTime = eventsForEndTime;
    }

}
