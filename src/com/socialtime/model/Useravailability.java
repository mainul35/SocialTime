package com.socialtime.model;
// Generated Mar 16, 2017 11:49:00 AM by Hibernate Tools 4.3.1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Useravailability generated by hbm2java
 */
@Entity
@Table(name = "useravailability", catalog = "socialtime"
)
public class Useravailability implements java.io.Serializable {

    private int slotId;
    private Day day;
    private Hours hoursByEndTimeId;
    private Hours hoursByStartTimeId;
    private Users users;

    public Useravailability() {
    }

    public Useravailability(int slotId, Day day, Hours hoursByEndTimeId, Hours hoursByStartTimeId, Users users) {
        this.slotId = slotId;
        this.day = day;
        this.hoursByEndTimeId = hoursByEndTimeId;
        this.hoursByStartTimeId = hoursByStartTimeId;
        this.users = users;
    }

    @Id

    @Column(name = "slotId", unique = true, nullable = false)
    public int getSlotId() {
        return this.slotId;
    }

    public void setSlotId(int slotId) {
        this.slotId = slotId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "dayId", nullable = false)
    public Day getDay() {
        return this.day;
    }

    public void setDay(Day day) {
        this.day = day;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "endTimeId", nullable = false)
    public Hours getHoursByEndTimeId() {
        return this.hoursByEndTimeId;
    }

    public void setHoursByEndTimeId(Hours hoursByEndTimeId) {
        this.hoursByEndTimeId = hoursByEndTimeId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "startTimeId", nullable = false)
    public Hours getHoursByStartTimeId() {
        return this.hoursByStartTimeId;
    }

    public void setHoursByStartTimeId(Hours hoursByStartTimeId) {
        this.hoursByStartTimeId = hoursByStartTimeId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "userEmail", nullable = false)
    public Users getUsers() {
        return this.users;
    }

    public void setUsers(Users users) {
        this.users = users;
    }

}
